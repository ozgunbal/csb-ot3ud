{"version":3,"sources":["api.js","Login.js","Holding.js","Session.js","Dashboard.js","index.js"],"names":["API_URL","TOKEN","signIn","a","username","password","fetch","method","mode","headers","body","JSON","stringify","res","json","getMarketData","marketPlaceId","Authorization","getSessions","data","sessions","_embedded","App","history","useHistory","useState","authError","setAuthError","useForm","defaultValues","email","account","handleSubmit","control","errors","submit","token","console","log","push","personId","person","id","message","className","onSubmit","style","display","flexDirection","name","rules","required","render","onChange","value","TextField","margin","label","variant","error","helperText","type","color","Button","Asset","profit","cashDifference","valuations","role","grant","canBuy","unitDifference","Math","abs","units","moneySpent","slice","reduce","b","toFixed","Holding","show","setShow","Card","padding","cursor","minWidth","onClick","x","Typography","owner","firstName","lastName","session","state","marketplace","assets","map","asset","Session","CardContent","ccolor","gutterBottom","length","filter","ses","today","Date","setHours","useLocation","holdings","setHoldings","setSessions","setValuations","openSessionIndex","setOpenSessionIndex","isMoveNext","setIsMoveNext","startDate","marketplaceId","getData","sessionData","filteredSessions","createdDate","getTime","sort","sessionIds","holdingsData","filtered","holding","includes","valuationData","isAllClosed","every","useEffect","marketPlaces","Object","keys","FormControl","InputLabel","Select","labelId","market","MenuItem","FormHelperText","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","cash","capital","undefined","rootElement","document","getElementById","ReactDOM","exact","path","component","Login","Dashboard"],"mappings":"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","file":"static/js/main.ceee705a.chunk.js","sourcesContent":["const API_URL = \"https://guarded-ridge-89710.herokuapp.com\";\nlet TOKEN = \"\";\n\nexport const signIn = async ({ username, password }) => {\n  const res = await fetch(`${API_URL}/api/tokens`, {\n    method: \"POST\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ username, password }) // body data type must match \"Content-Type\" header\n  });\n  return res.json();\n};\n\nexport const getMarketData = async (marketPlaceId) => {\n  const res = await fetch(\n    `${API_URL}/api/marketplaces/${marketPlaceId}/holdings`,\n    {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TOKEN}`\n      }\n    }\n  );\n  return res.json();\n};\n\nexport const getSessions = async (marketPlaceId) => {\n  const res = await fetch(\n    `${API_URL}/api/sessions?marketplaceId=${marketPlaceId}`,\n    {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TOKEN}`\n      }\n    }\n  );\n  const data = await res.json();\n  const sessions = data._embedded.sessions;\n\n  return sessions;\n};\n\nexport const setToken = (token) => {\n  TOKEN = token;\n  console.log(TOKEN);\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport \"./App.css\";\nimport { signIn, setToken } from \"./api\";\n\nfunction App() {\n  const history = useHistory();\n  const [authError, setAuthError] = useState(\"\");\n\n  const { handleSubmit, control, errors } = useForm({\n    defaultValues: {\n      password: \"\",\n      email: \"\",\n      account: \"\"\n    }\n  });\n  const submit = async ({ account, email, password }) => {\n    try {\n      const data = await signIn({ username: `${account}|${email}`, password });\n      setToken(data.token);\n      history.push(\"/dashboard\", {\n        personId: data.person.id,\n        person: data.person\n      });\n    } catch (error) {\n      setAuthError(error.message);\n    }\n  };\n  console.log(errors);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Flex E-Market Experiment</h2>\n        <form\n          onSubmit={handleSubmit(submit)}\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <Controller\n            name=\"account\"\n            control={control}\n            rules={{ required: \"Required field\" }}\n            render={({ onChange, value }) => (\n              <TextField\n                style={{ margin: \"10px 0\" }}\n                label=\"Account\"\n                variant=\"outlined\"\n                value={value}\n                onChange={onChange}\n                error={!!errors.account}\n                helperText={errors.account && errors.account.message}\n              />\n            )}\n          />\n\n          <Controller\n            name=\"email\"\n            control={control}\n            rules={{ required: \"Required field\" }}\n            render={({ onChange, value }) => (\n              <TextField\n                style={{ margin: \"10px 0\" }}\n                label=\"E-mail\"\n                variant=\"outlined\"\n                value={value}\n                onChange={onChange}\n                error={!!errors.email}\n                helperText={errors.email && errors.email.message}\n              />\n            )}\n          />\n\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{ required: \"Required field\" }}\n            render={({ onChange, value }) => (\n              <TextField\n                style={{ margin: \"10px 0\" }}\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                value={value}\n                onChange={onChange}\n                error={!!errors.password}\n                helperText={errors.password && errors.password.message}\n              />\n            )}\n          />\n          {authError ? <div style={{ color: \"red\" }}>Login failed.</div> : null}\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            SIGN IN\n          </Button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Asset = ({ data, cashDifference, valuations }) => {\n  const role = data.grant.canBuy ? \"BUYER\" : \"SELLER\";\n  const unitDifference = Math.abs(data.units - data.grant.units);\n  const moneySpent =\n    unitDifference > 0 && valuations\n      ? valuations.slice(0, unitDifference).reduce((a, b) => a + b)\n      : 0;\n  let profit;\n  if (role === \"BUYER\") {\n    profit = moneySpent - cashDifference / 100;\n  } else {\n    profit = cashDifference / 100 - moneySpent;\n  }\n  return valuations ? (\n    <p>Profit: {profit.toFixed(2)}</p>\n  ) : (\n    <p>Couldn't find valuations</p>\n  );\n};\n\nconst Holding = ({ data, cashDifference, valuations }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <Card\n      style={{ padding: 10, cursor: \"pointer\", minWidth: 300 }}\n      onClick={() => setShow((x) => !x)}\n    >\n      Cash\n      {show ? (\n        <>\n          <Typography color=\"textSecondary\">\n            Owner : {data.owner.firstName} {data.owner.lastName}\n            <br />\n            Session is {data.session.state}\n            <br />\n            MarketPlace: {data.marketplace.name}\n            <br />\n            <br />\n          </Typography>\n          <p>\n            {data.assets.map((asset) => (\n              <Asset\n                data={asset}\n                cashDifference={cashDifference}\n                valuations={valuations}\n              />\n            ))}\n          </p>\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default Holding;\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Session = ({ sessions }) => {\n  return sessions ? (\n    <Card style={{ margin: 10 }}>\n      <CardContent>\n        <Typography ccolor=\"textSecondary\" gutterBottom>\n          Session Count: {sessions.length}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {sessions.filter((ses) => ses.state === \"CLOSED\").length} session(s)\n          CLOSED\n        </Typography>\n        <Typography variant=\"h5\">\n          {sessions.filter((ses) => ses.state === \"OPEN\").length} session OPEN\n        </Typography>\n      </CardContent>\n    </Card>\n  ) : null;\n};\n\nexport default Session;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport \"./App.css\";\nimport { getMarketData, getSessions } from \"./api\";\nimport Holding from \"./Holding\";\nimport Sessions from \"./Session\";\nimport valuationData from \"./data.json\";\n\nconst today = new Date(new Date().setHours(0, 0, 0));\n\nfunction App() {\n  const history = useHistory();\n  const { state } = useLocation();\n  const [holdings, setHoldings] = useState();\n  const [sessions, setSessions] = useState();\n  const [valuations, setValuations] = useState();\n  const [openSessionIndex, setOpenSessionIndex] = useState();\n  const [isMoveNext, setIsMoveNext] = useState();\n\n  const { handleSubmit, control, errors } = useForm({\n    defaultValues: {\n      startDate: today,\n      marketplaceId: \"\"\n    }\n  });\n\n  const getData = async ({ marketplaceId, startDate }) => {\n    setIsMoveNext(false);\n    const sessionData = await getSessions(marketplaceId);\n    const filteredSessions = sessionData\n      .filter(\n        (data) => new Date(data.createdDate).getTime() > startDate.getTime()\n      )\n      .sort(\n        (a, b) =>\n          new Date(a.createdDate).getTime() > new Date(b.createdDate).getTime()\n      );\n    const sessionIds = filteredSessions.map((session) => session.id);\n\n    const holdingsData = await getMarketData(marketplaceId);\n    const filtered = holdingsData\n      .filter((holding) => holding.owner.id === state.personId)\n      .filter((holding) => sessionIds.includes(holding.session.id));\n    setHoldings(filtered);\n    setSessions(filteredSessions);\n    setOpenSessionIndex(filteredSessions.length - 1);\n    setValuations(\n      valuationData[marketplaceId][state.person.email][\n        filteredSessions.length - 1\n      ] || []\n    );\n\n    const isAllClosed = filteredSessions.every((ses) => ses.state === \"CLOSED\");\n    setIsMoveNext(filteredSessions.length > 4 && isAllClosed);\n  };\n\n  useEffect(() => {\n    if (!state) {\n      history.push(\"/\");\n    }\n  }, [state, history]);\n\n  const marketPlaces = Object.keys(valuationData).filter((id) =>\n    Object.keys(valuationData[id]).includes(state.person.email)\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form\n          onSubmit={handleSubmit(getData)}\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <Controller\n            name=\"marketplaceId\"\n            control={control}\n            rules={{ required: \"Required field\" }}\n            render={({ onChange, value }) => (\n              <FormControl error={errors.marketplaceId}>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Marketplace ID\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={value}\n                  onChange={onChange}\n                >\n                  {marketPlaces.map((market) => (\n                    <MenuItem value={market}>{market}</MenuItem>\n                  ))}\n                </Select>\n                {errors.marketplaceId ? (\n                  <FormHelperText>\n                    {errors.marketplaceId.message}\n                  </FormHelperText>\n                ) : null}\n              </FormControl>\n            )}\n          />\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Controller\n              name=\"startDate\"\n              control={control}\n              render={({ onChange, value }) => (\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  id=\"date-picker-inline\"\n                  label=\"Experiment Date\"\n                  value={value}\n                  onChange={onChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              )}\n            />\n          </MuiPickersUtilsProvider>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            {holdings ? \"ReSend\" : \"Send\"}\n          </Button>\n        </form>\n        <Sessions sessions={sessions} />\n        {holdings ? (\n          holdings.length ? (\n            <div style={{ padding: 5 }}>\n              <p>Holdings:</p>\n              <ul>\n                {holdings.map((holding) => {\n                  const cashDifference = Math.abs(\n                    holding.cash - holding.capital.cash\n                  );\n                  return (\n                    <Holding\n                      key={holding.owner.createdDate}\n                      data={holding}\n                      cashDifference={cashDifference}\n                      valuations={\n                        openSessionIndex >= 0 ? valuations : undefined\n                      }\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n          ) : (\n            <div>There's no holding</div>\n          )\n        ) : null}\n        {isMoveNext > 4 ? <div>Move to next market </div> : null}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}